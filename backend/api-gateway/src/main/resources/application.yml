spring:
  application:
    name: api-gateway
  autoconfigure:
    exclude:
      - org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryAutoConfiguration
  cloud:
    gateway:
      # Routes are configured programmatically in GatewayConfig.java


      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      httpclient:
        connect-timeout: 30000
        response-timeout: 60s
  # Redis rate limiter configuration removed - not using rate limiting currently

server:
  port: 8080

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  tracing:
    enabled: false  # Disable Spring Boot's built-in tracing, use OpenTelemetry instead
    sampling:
      probability: 0.0  # Disable sampling completely
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

# Service Discovery Configuration
services:
  user-service:
    url: ${USER_SERVICE_URL:http://localhost:8081}
  accounts-service:
    url: ${ACCOUNTS_SERVICE_URL:http://localhost:8082}
  transactions-service:
    url: ${TRANSACTIONS_SERVICE_URL:http://localhost:8083}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:banking-app-super-secret-key-change-this-in-production-256-bit}
  expiration: ${JWT_EXPIRATION:86400000}

# Logging Configuration
logging:
  level:
    com.banking.apigroup: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.boot.actuate.endpoint.web: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
    file: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
# Disabled file logging for containerized deployment
#  file:
#    name: logs/api-gateway.log

# OpenTelemetry Configuration
otel:
  service:
    name: ${spring.application.name}
  exporter:
    otlp:
      protocol: grpc
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
      headers: {}
      timeout: 10s
      compression: none
  traces:
    exporter: otlp
    propagators: tracecontext
    sampler:
      type: always_on
      arg: 1.0
    processor:
      batch:
        enabled: true
        maxQueueSize: 2048
        maxExportBatchSize: 512
        scheduleDelay: 5000
        exportTimeout: 30000
  metrics:
    exporter: otlp
  logs:
    exporter: otlp
  propagation:
    type: tracecontext
  # Span naming configuration
  span:
    name:
      pattern: "{http.method} {http.route}"
    